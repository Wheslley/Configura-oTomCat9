Instalar Java SE SDK (JDK) e Java SE Runtime Environment (JRE)
	JDK: http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html
	Instalação Normal
	JRE: http://www.oracle.com/technetwork/pt/java/javase/downloads/jre8-downloads-2133155.html
	Instalação Normal
	
Configurar o JAVA_HOME, JAVA_HOME e CATALINA_HOME no Path e ClassPath
	Configuração das variáveis de ambiente (Windows)
	JAVA_HOME : C:\Program Files\Java\jdk1.8.0_121
	JRE_HOME : C:\Program Files\Java\jre1.8.0_121
	CATALINA_HOME: C:\Program Files\Apache Software Foundation\Tomcat 9.0
	Path: ;%JAVA_HOME%\bin;%JRE_HOME%\bin; %CATALINA_HOME%\bin
	CLASS_PATH : ;%JAVA_HOME%;%JRE_HOME%;%CATALINA_HOME%

Instalar TomCat 9
	Link: http://tomcat.apache.org/download-90.cgi
	Instalação FULL
	user: admin password:senha
	caminho JRE: C:\Program Files\Java\jre1.8.0_121
	caminho instalação: C:\Program Files\Apache Software Foundation\Tomcat 9.0
	Tomcat admin port : 8005
	HTTP/1.1 : 8080
	AJP/1.3 : 8009
	Leia o README*
	
API´s inclusas
	* annotations-api.jar (Annotations package)
	* catalina.jar (Tomcat Catalina implementation)
	* catalina-ant.jar (Tomcat Catalina Ant tasks)
	* catalina-ha.jar (High availability package)
	* catalina-storeconfig.jar (Generation of XML configuration from current state)
	* catalina-tribes.jar (Group communication)
	* ecj-4.6.3.jar (Eclipse JDT Java compiler)
	* el-api.jar (EL 3.0 API)
	* jasper.jar (Jasper 2 Compiler and Runtime)
	* jasper-el.jar (Jasper 2 EL implementation)
	* jsp-api.jar (JSP 2.3 API)
	* servlet-api.jar (Servlet 4.0 API)
	* tomcat-api.jar (Interfaces shared by Catalina and Jasper)
	* tomcat-coyote.jar (Tomcat connectors and utility classes)
	* tomcat-dbcp.jar (package renamed database connection pool based on Commons DBCP)
	* tomcat-jdbc.jar (Tomcat's database connection pooling solution)
	* tomcat-jni.jar (Interface to the native component of the APR/native connector)
	* tomcat-util.jar (Various utilities)
	* tomcat-websocket.jar (WebSocket 1.1 implementation)
	* websocket-api.jar (WebSocket 1.1 API)

Iniciar e parar o Tomcat (site)
	Tomcat como serviço
		Monitor Tomcat
		Start Service
		Stop Service
	Tomcat como processo
		Start
			cd %CATALINA_HOME%\bin
			startup.bat
			Acesso: http://localhost:{porta-configurada}/ (http://localhost:8080/)
		Shutdown
			cd %CATALINA_HOME%\bin
			shutdown.bat
			
TomCat > Configure > Java 
	Initial memory pool : 1024 Mb
	Maximum memory pool : 2048 Mb
	Thred stack size : 512 Kb

Configurando TomCat 9 no eclipse
	Window > Show View > Servers > New Server
	Selecione a versão do Tomcat v9.0 Server > Next
	Associe seu projeto > Add > Finish
	Clique 2 vezes no Server e altere as portas para não conflitar com seu servidor
	Tomcat admin port : 9005
	HTTP/1.1 : 9090
	AJP/1.3 : 9009
	Start Server
	Acesse sua aplicação: http://localhost:9090/HelloTomCat/index.html

Criando Usuários e lhe dando grants
	manager-gui - Acesso à interface HTML.
	manager-status - Acesso apenas a página "Status do Servidor".
	manager-script - Acesso à interface de texto simples ferramentas-friendly que é descrito neste documento, e para a página 
					"Status do Servidor".
	manager-jmx - Acesso à interface do proxy JMX e para a página "Status do Servidor".
	
	<role rolename="admin-gui"/>
	<role rolename="manager-gui"/>
	
	<user username="jady" password="senha" roles="manager-script,manager-jax,manager-status" />
	<user username="wheslley" password="senha" roles="manager-gui,manager-script,manager-jax,manager-status,admin-gui"/>
	
Configurar um DataSource no Tomcat (MySql)
	open server.xml
	<Context path="/datasource" docBase="datasource" debug="0">

	 <Resource name="jdbc/DSRC2" auth="Container" type="javax.sql.DataSource"
		maxActive="50" maxIdle="30" maxWait="10000"
		username="root" password="root" driverClassName="com.mysql.jdbc.Driver"
		url="jdbc:mysql://localhost/comanda_digital"/>

    </Context>
	
	web.xml
	<resource-ref>

		<description>Conexao MySQL</description>
		<res-ref-name>jdbc/DSRC2</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>

	</resource-ref>	
	
Project HelloTomCat > Export > War file
	Escolha o local de armazenamento do war

Deploy War no Servidor TomCat
	compile (default): Compile and validate the web application. This can be used standalone, and does not need a running Tomcat server. The compiled application will only run on the associated Tomcat X.Y.Z server release, and is not guaranteed to work on another Tomcat release, as the code generated by Jasper depends on its runtime component. It should also be noted that this target will also compile automatically any Java source file located in the /WEB-INF/classes folder of the web application.
	deploy: Deploy a web application (compiled or not) to a Tomcat server.
	undeploy: Undeploy a web application
	start: Start web application
	reload: Reload web application
	stop: Stop web application
	http://localhost:8080/ > Manager App > WAR file to deploy > Escolher arquivo
	Deploy
	/HelloTomCat
	
Acesseando a aplicação
	localhost:8080/HelloTomCat/index.html

Criar Contexto
	Criar um arquivo xml conforme abaixo e nomeá-lo (rc2):
		<?xml version="1.0" encoding="iso-8859-1"?>
	 
		<Context path="/rc2" docBase="D:/IFSP/5 SEMESTRE/RC2/project/HelloTomCat/WebContent"
		 reloadable="true" privileged="true" crossContext="true">
		</Context>
	
		docBase: diretório base da aplicação web.
		reloadable: Recarrega automaticamente classes e bibliotecas modificadas.
		privileged: Permite utilizar servlets do servidor Tomcat.
		crossContext: Permite acessar outras aplicações web neste servidor.
		
		Acesseando a aplicação
			localhost:8080/rc2